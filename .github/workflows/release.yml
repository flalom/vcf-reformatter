name: Release

on:
  release:
    types: [published]

permissions:
  contents: write  # This is crucial for uploading assets

jobs:
  release:
    name: Release ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: linux-x86_64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            name: linux-x86_64-static

          # Windows
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: windows-x86_64

          # macOS
          - os: macos-latest
            target: x86_64-apple-darwin
            name: macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            name: macos-arm64

    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install musl tools (for static Linux builds)
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: sudo apt-get install -y musl-tools

      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: release-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare release asset
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            asset_name="vcf-reformatter-${{ github.ref_name }}-${{ matrix.name }}.exe"
            cp target/${{ matrix.target }}/release/vcf-reformatter.exe $asset_name
          else
            asset_name="vcf-reformatter-${{ github.ref_name }}-${{ matrix.name }}"
            cp target/${{ matrix.target }}/release/vcf-reformatter $asset_name
            chmod +x $asset_name
          fi
          echo "ASSET_NAME=$asset_name" >> $GITHUB_ENV

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ASSET_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Build Docker in release
  docker:
    name: Release Docker Image
    runs-on: ubuntu-latest
    needs: release

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: flalom/vcf-reformatter
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest

      - name: Build Docker image (validation only)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}